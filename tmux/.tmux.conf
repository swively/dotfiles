set -g default-terminal "screen-256color"

unbind C-b
set -g prefix C-a
bind C-a send-prefix

set -s escape-time 0

bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

bind-key -n C-q next-window
bind-key -n C-s previous-window

set -g history-limit 100000

set -g base-index 1
set -g pane-base-index 1

set -g mouse on

setw -g mode-keys vi
set -g status-keys vi

bind-key m send-keys C-l

set -g status-position bottom

set -g status-style fg=default,bg=default,none

set -g mode-style reverse

set -g message-style bg=colour7,fg=colour10
set -g message-command-style none

set -g pane-border-style fg=colour7,bg=default
set -g pane-active-border-style fg=colour10,bg=default

set -g status-left ' #S '
set -g status-left-style bold,fg=colour15,bg=colour23
set -g status-left-length 150

set -g status-right ' %I:%M%p '
set -g status-right-style bold,fg=colour15,bg=colour4
set -g status-right-length 150

set -g status-justify centre
setw -g window-status-separator ' '

setw -g window-status-format ' #{b:pane_current_path} '
setw -g window-status-style fg=colour16,bg=colour4

setw -g window-status-current-format ' #{b:pane_current_path} ' #W for current process
setw -g window-status-current-style fg=colour15,bg=colour12

set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format ' #{b:pane_current_path} '

# # force a reload of the config file
# unbind r
# bind r source-file ~/.tmux.conf

# # quick pane cycling
# unbind ^A
# bind ^A select-pane -t :.+

# # extra commands for interacting with the ICCCM clipboard
# bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# # reattach-to-user-namespace stuff
# set-option -g default-command "reattach-to-user-namespace -l zsh"
#  ============================

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# I <3 Vim
set -g mode-keys vi
set -g status-keys vi

# v, y and p as in vim
bind Escape copy-mode
unbind P
bind P paste-buffer
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection

# extra commands for interacting with the ICCCM clipboard
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# set scrollback to 250000 or roughly 32MB per pane
set -g history-limit 250000

# show user@host as windown title
set -g set-titles on
set -g set-titles-string "#T"

# easy-to-remember split pane commands
bind c new-window -c "#{pane_current_path}"
bind = split-window -h -c "#{pane_current_path}"
unbind '"'
unbind %

# start new window with current path
bind - split-window -v -c "#{pane_current_path}"

# moving between windows with vim movement keys
bind -r C-h previous-window
bind -r C-l next-window

# moving between sessions with vim movement keys
bind -r C-k switch-client -p \; refresh-client -S
bind -r C-j switch-client -n \; refresh-client -S

# Some keybindings from Byobu
bind -n F2 new-window \; rename-window "-"
bind -n C-S-F2 new-session

# moving between windows with Alt-Left/Alt-Right
bind -n M-Left previous-window
bind -n M-Right next-window

# moving between sessions with Alt-Up/Alt-Down
bind -n M-Up switch-client -p \; refresh-client -S
bind -n M-Down switch-client -n \; refresh-client -S

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# # # smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# # # colors
# # set -g status-bg 'colour233'
# # set -g message-command-fg 'colour145'
# # set -g status-justify 'left'
# # set -g status-left-length '100'
# # set -g status 'on'
# # set -g pane-active-border-fg 'colour25'
# # set -g message-bg 'colour236'
# # set -g status-right-length '100'
# # set -g status-right-attr 'none'
# # set -g message-fg 'colour145'
# # set -g message-command-bg 'colour236'
# # set -g status-attr 'none'
# # set -g pane-border-fg 'colour236'
# # set -g status-left-attr 'none'
# # setw -g window-status-fg 'colour240'
# # setw -g window-status-attr 'none'
# # setw -g window-status-activity-bg 'colour233'
# # setw -g window-status-activity-attr 'none'
# # setw -g window-status-activity-fg 'colour25'
# # setw -g window-status-separator ''
# # setw -g window-status-bg 'colour233'

# # set -g status-left '#[fg=colour195,bg=colour25,bold] #S #[fg=colour25,bg=colour233,nobold,nounderscore,noitalics]'
# # set -g status-right '#[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]#[fg=colour240,bg=colour233] #(whoami)@#H #[fg=colour195,bg=magenta] #(~/bin/hcl_status.rb) #[fg=colour195,bg=colour25,bold] %d %B %Y %I:%M%p '

# # setw -g window-status-format '#[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]#[default] #I:#W #[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]'
# # setw -g window-status-current-format '#[fg=colour233,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour145,bg=colour236] #I:#W #[fg=colour236,bg=colour233,nobold,nounderscore,noitalics]'
